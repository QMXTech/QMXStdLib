#! /bin/bash
################################################################################################################################################################
# test_setup.sh
# Robert M. Baker | Created : 15FEB16 | Last Modified : 26AUG19 by Robert M. Baker
# Version : 2.1.1
# This is a bash script for setup of the test directory for 'QMXStdLibTest'.
################################################################################################################################################################
# Copyright (C) 2011-2019 QuantuMatriX Software, a QuantuMatriX Technologies Cooperative Partnership
#
# This file is part of 'QMXStdLib'.
#
# 'QMXStdLib' is free software: you can redistribute it and/or modify it under the terms of the GNU Lesser General Public License as published by the Free
# Software Foundation, either version 3 of the License, or (at your option) any later version.
#
# 'QMXStdLib' is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.  See the GNU Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public License along with 'QMXStdLib'.  If not, see <http://www.gnu.org/licenses/>.
################################################################################################################################################################

################################################################################################################################################################
# Variables
################################################################################################################################################################

platform=${1}

################################################################################################################################################################
# Constants
################################################################################################################################################################

NAME="test_setup.sh"
VERSION="1.0.0"
YEARS="2011-2019"
COMPANY="QuantuMatriX Software, a QuantuMatriX Technologies Cooperative Partnership"
AUTHOR="Robert M. Baker"

COLOR_ERROR=${FG_I_RED}
COLOR_INFO=${FG_I_GREEN}
COLOR_TEXT=${FG_I_WHITE}

OPTIONS_SHORT="hv"
OPTIONS_LONG="help,version"
MIN_ARGS=1

ASSIGNMENT="@PROGRAMOPTIONS_ASSIGNMENT_OPERATOR@"
COMMENT="@PROGRAMOPTIONS_COMMENT_INITIATOR@"
DELIMITER_LEFT="@PROGRAMOPTIONS_GROUP_DELIMITER_LEFT@"
DELIMITER_RIGHT="@PROGRAMOPTIONS_GROUP_DELIMITER_RIGHT@"
DEFAULT_GROUP="@PROGRAMOPTIONS_GROUP_DEFAULT@"

################################################################################################################################################################
# Functions
################################################################################################################################################################

doAbort()
{
	# Display specified abort message.

		if [[ ${2} > 0 ]]; then
			echo -e "${COLOR_ERROR}Error: ${1}${RESET}"
		else
			echo -e "${COLOR_INFO}Info: ${1}${RESET}"
		fi

		echo -e

	# Exit script with specified code.

		exit ${2}
}

doHelp()
{
	# Display help.

		echo -e "${COLOR_INFO}Usage: ${NAME} [OPTION]... <PLATFORM>"
		echo -e "Sets up the test directory for 'QMXStdLibTest'."
		echo -e
		echo -e "  -h, --help           : Display this help and exit."
		echo -e "  -v, --version        : Output version information and exit."
		echo -e
		echo -e "'PLATFORM' must be one of: 'lin' (GNU Linux) or 'mac' (Apple macOS)"
		echo -e "${RESET}"

	# Exit script.

		exit 0
}

doVersion()
{
	# Display version information.

		echo -e "${COLOR_INFO}${NAME} V${VERSION}"
		echo -e "Copyright (C) ${YEARS} ${COMPANY}"
		echo -e "License LGPLv3+: GNU LGPL version 3 or later <https://www.gnu.org/licenses/lgpl.html>."
		echo -e "This is free software: you are free to change and redistribute it."
		echo -e "There is NO WARRANTY, to the extent permitted by law."
		echo -e
		echo -e "Written by ${AUTHOR}"
		echo -e ${RESET}

	# Exit script.

		exit 0
}

doSetupLin()
{
	# Perform setup on a GNU Linux platform.

		if [[ ! -e TestDirectory ]]; then mkdir TestDirectory; fi
		cd TestDirectory
		mkdir EmptyTestDirectory
		mkdir -p NonEmptyTestDirectory/NonEmptyTestSubdirectory
		touch EmptyTestFile.txt
		echo "This is a non-empty test file." > NonEmptyTestFile.txt
		cp NonEmptyTestFile.txt NonEmptyTestDirectory
		cp NonEmptyTestFile.txt NonEmptyTestDirectory/NonEmptyTestSubdirectory
		ln EmptyTestFile.txt TestFileHardlink
		ln -s NonEmptyTestDirectory TestDirectorySymlink
		ln -s NonEmptyTestFile.txt TestFileSymlink
		printf "${COMMENT} Test.cfg\n" > Test.cfg
		printf "\n" >> Test.cfg
		printf "${DELIMITER_LEFT}${DEFAULT_GROUP}${DELIMITER_RIGHT}\n" >> Test.cfg
		printf "alpha ${ASSIGNMENT} FooBar\n" >> Test.cfg
		printf "bit-mask ${ASSIGNMENT} 1337\n" >> Test.cfg
		printf "\n" >> Test.cfg
		printf "${DELIMITER_LEFT}TestGroup1${DELIMITER_RIGHT}\n" >> Test.cfg
		printf "bravo ${ASSIGNMENT} B2\n" >> Test.cfg
		printf "charlie ${ASSIGNMENT} C3\n" >> Test.cfg
		printf "\n" >> Test.cfg
		printf "${DELIMITER_LEFT}TestGroup2${DELIMITER_RIGHT}\n" >> Test.cfg
		printf "delta ${ASSIGNMENT} D4\n" >> Test.cfg
		printf "echo ${ASSIGNMENT} E5\n" >> Test.cfg
		printf "\n" >> Test.cfg
}

doSetupMac()
{
	# Perform setup on an Apple macOS platform.

		echo -e "Stub: Perform Apple macOS setup."
}

################################################################################################################################################################
# Process Options and Arguments
################################################################################################################################################################

options=$(getopt -o ${OPTIONS_SHORT} -l ${OPTIONS_LONG} -q -- "$@")
eval set -- "${options}"

while true; do
	case "${1}" in
		"-h"|"--help")
			doHelp
		;;
		"-v"|"--version")
			doVersion
		;;
		"--")
			shift 1
			break
		;;
		*)
			doAbort "Unhandled exception!" 1
		;;
	esac
done

if [[ ${#} -lt ${MIN_ARGS} ]]; then
	doAbort "Too few arguments specified!" 2
elif [[ ( ${platform} != "lin" ) && ( ${platform} != "mac" ) ]]; then
	doAbort "Unsupported platform ('${Platform}') specified!" 3
fi

################################################################################################################################################################
# Script Body
################################################################################################################################################################

if [[ ${platform} == "lin" ]]; then
	doSetupLin
elif [[ ${platform} == "mac" ]]; then
	doSetupMac
fi

################################################################################################################################################################
# End of 'test_setup.sh'
################################################################################################################################################################
