////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// TestPlugin3.cpp
// Robert M. Baker | Created : 01JUL12 | Last Modified : 29JAN16 by Robert M. Baker
// Version : 1.1.0
// This is a source file for 'QMXStdLibTest'; it defines the implementation for a test plugin.
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (C) 2011-2016 QuantuMatriX Software, LLP.
//
// This file is part of 'QMXStdLib'.
//
// 'QMXStdLib' is free software: you can redistribute it and/or modify it under the terms of the GNU Lesser General Public License as published by the Free
// Software Foundation, either version 3 of the License, or (at your option) any later version.
//
// 'QMXStdLib' is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR
// A PARTICULAR PURPOSE.  See the GNU Lesser General Public License for more details.
//
// You should have received a copy of the GNU Lesser General Public License along with 'QMXStdLib'.  If not, see <http://www.gnu.org/licenses/>.
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Header Files
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#include <TestPlugins/TestPlugin3.hpp>

using namespace std;
using namespace QMXStdLib;

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Public Methods for the 'TestPlugin3' Class
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

TestPlugin3::TestPlugin3()
{
	// Initialize fields.

		MetaData[ "Description" ] = "A simple plugin to test QMXStdLib's plugin framework (#3).";
}

TestPlugin3::~TestPlugin3()
{
	// Do nothing.
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Private Methods for the 'TestPlugin3' Class
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

string TestPlugin3::GetIDImp() const
{
	// Return unique plugin ID to calling routine.

		return "TestPlugin3";
}

Utility::VersionData TestPlugin3::GetVersionImp() const
{
	// Return plugin version to calling routine.

		return { 1, 0, 0 };
}

void TestPlugin3::GetMetaImp( StringMap& Target ) const
{
	// Set specified string map object to current meta data.

		Target = MetaData;
}

void TestPlugin3::InstallImp()
{
	// Do nothing.
}

void TestPlugin3::UninstallImp()
{
	// Do nothing.
}

void TestPlugin3::InitializeImp()
{
	// Do nothing.
}

void TestPlugin3::ShutdownImp()
{
	// Do nothing.
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Global Function Definitions
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

extern "C" string PluginGetModule()
{
	// Return dependent module ID to calling routine.

		return "QMXStdLibTest";
}

extern "C" void PluginStart( Plugin** Instance )
{
	// Start plugin.

		TestPlugin3Instance = new TestPlugin3();
		*Instance = TestPlugin3Instance;
		PLUGIN_MANAGER.Install( TestPlugin3Instance );
}

extern "C" void PluginStop()
{
	// Stop plugin.

		PLUGIN_MANAGER.Uninstall( TestPlugin3Instance );
		SAFE_DELETE( TestPlugin3Instance );
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// End of 'TestPlugin3.cpp'
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
