////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// FileSystemTest.hpp
// Robert M. Baker | Created : 12MAR12 | Last Modified : 29AUG19 by Robert M. Baker
// Version : 2.2.1
// This is a header file for 'QMXStdLibTest'; it defines a set of unit tests for the 'QMXStdLib::FileSystem' functions.
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (C) 2011-2019 QuantuMatriX Software, a QuantuMatriX Technologies Cooperative Partnership
//
// This file is part of 'QMXStdLib'.
//
// 'QMXStdLib' is free software: you can redistribute it and/or modify it under the terms of the GNU Lesser General Public License as published by the Free
// Software Foundation, either version 3 of the License, or (at your option) any later version.
//
// 'QMXStdLib' is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR
// A PARTICULAR PURPOSE.  See the GNU Lesser General Public License for more details.
//
// You should have received a copy of the GNU Lesser General Public License along with 'QMXStdLib'.  If not, see <http://www.gnu.org/licenses/>.
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#ifndef __QMX_QMXSTDLIBTEST_FILESYSTEMTEST_HPP_
#define __QMX_QMXSTDLIBTEST_FILESYSTEMTEST_HPP_

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Control Macros
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

// TODO (Robert M. Baker - Priority 50): Determine if the control macro below is necessary for Windows.
//#ifdef __MINGW32__
//#	define MINGW_HAS_SECURE_API 1
//#endif // __MINGW32__

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Header Files
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#include <cstdlib>
#include <sstream>
#include <string>
#include <gtest/gtest.h>

#include "../../include/QMXException.hpp"
#include "../../include/FileSystem.hpp"

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Static Macros
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#define BASE_PATH    "./TestDirectory/"

#if ( QMX_PLATFORM == QMX_PLATFORM_LINUX )
#	define TEST_OTHER "/dev/null"
#elif( QMX_PLATFORM == QMX_PLATFORM_MACOS )
#	define TEST_OTHER "/dev/null"
#elif( QMX_PLATFORM == QMX_PLATFORM_WINDOWS )
#	define TEST_OTHER "TestFileSymlink"
#endif // Platform Headers

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// The 'ScopedPathChange' Class
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

class ScopedPathChange
{
public:

	// Public Constructors

		ScopedPathChange( const QMXStdLib::Path& target )
		{
			// Initialize fields.

				initialPath = boost::filesystem::current_path();

			// Perform necessary initialization.

				boost::filesystem::current_path( target );
		}

	// Destructor

		~ScopedPathChange()
		{
			// Perform necessary cleanup.

				boost::filesystem::current_path( initialPath );
		}

private:

	// Private Fields

		QMXStdLib::Path initialPath;
};

#endif // __QMX_QMXSTDLIBTEST_FILESYSTEMTEST_HPP_

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// End of 'FileSystemTest.hpp'
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
